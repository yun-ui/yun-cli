#!/usr/bin/env node

const program = require('commander')
const child_process = require('child_process')
const path = require('path')
let download = require('download-git-repo')
let exists = require('fs').existsSync
let ora = require('ora')
let home = require('user-home')
let tildify = require('tildify')
let chalk = require('chalk')
let inquirer = require('inquirer')
let logger = require('../lib/logger')
let generate = require('../lib/generate')
let warnings = require('../lib/warnings')

/**
 * Usage
 */
program
    .usage('<project_name>')
    .description('init a vue.js project with yun-ui template.')

/**
 * Help
 */
program.on('--help', function () {
    console.log('  Examples:');
    console.log('');
    console.log('    yun init project_name');
    console.log('');
});

program.parse(process.argv)

if (program.args.length !== 1) {
    return program.help()
}

/**
 * Settings.
 */
let template = 'skyang/vue-yun-template'
let rawName = program.args[0]
let inPlace = !rawName || rawName === '.'
let name = inPlace ? path.relative('../', process.cwd()) : rawName
let to = path.resolve(rawName || '.')
let clone = program.clone || false
let tmp = path.join(home, '.vue-templates', template.replace(/\//g, '-'))

/**
 * Padding.
 */
console.log()
process.on('exit', function () {
    console.log()
})

if (exists(to)) {
    inquirer.prompt([{
        type: 'confirm',
        message: inPlace
            ? 'Generate project in current directory?'
            : 'Target directory exists. Continue?',
        name: 'ok'
    }], function (answers) {
        if (answers.ok) {
            downloadAndGenerate(template)
        }
    })
} else {
    downloadAndGenerate(template)
}

/**
 * Download a generate from a template repo.
 *
 * @param {String} template
 */

function downloadAndGenerate (template) {
    let spinner = ora('downloading template')
    spinner.start()
    download(template, tmp, { clone: clone }, function (err) {
        spinner.stop()
        if (err) logger.fatal('Failed to download repo ' + template + ': ' + err.message.trim())
        generate(name, tmp, to, function (err) {
            if (err) logger.fatal(err)
            console.log()
            logger.success('Generated "%s".', name)
        })
    })
}
